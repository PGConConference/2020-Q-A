[Q] can you move closer to the microphone? it is difficult to hear you

[Q] would you suggest a partitioninng scheme with two partitions? one on
end_time = infinity and one default for all the rest?

[Q] Is this already implemented, or is this your suggestion?

[Q] What do you think of also supporting a single range-type column named
system_time to store the start/end times, if people don't want to add a PERIOD
and the two separate columns?

[Q] how would the select filter for non-temporal queries be implemented? with a
trigger, or some other way?

[Q] can you generate field-wise deltas between timepoints?

[Q] How do you handle unique indexes and exclusion constraints on
system-versioned tables?

[Q] Will system versioning work on a partitioned table?

[Q] What column types are supported for the start/end columns?

[Q] If we do want to support ranges too, it might be better to store NULL
instead of 'Infinity' as the "until further notice" end time, because for ranges
'Infinity' is "less than" NULL. (My talk tomorrow has a slide about this.) What
do you think of that?

[Q] The last time I looked at this patch, it seemed to be hard-coding the
SYSTEM_TIME period name in the parser (and it was also using the non-standard
SYSTEM TIME (two words)). Do you have plans to incorporate xocolatl's patch that
lets real PERIOD support (e.g. so that you can ask Postgres which PERIODs are
supported)? I'm interested in incorporating that patch into my own valid-time
work

[Q] To handle SELECT * FROM t FOR p FROM t1 TO t1, did you run into any
shift/reduce conflicts? I had a problem there adding UPDATE/DELETE FOR PORTION
OF p FROM t1 TO t2. (I have a slide about this too.) I'm curious if you
encountered that and if so how you solved it.
